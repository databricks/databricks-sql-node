//
// Autogenerated by Thrift Compiler (0.16.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//

import Int64 = require('node-int64');

import { TCLIService } from "./TCLIService_types";


export declare class TCLIServiceClient {
  input: Thrift.TJSONProtocol;
  output: Thrift.TJSONProtocol;
  seqid: number;

  constructor(input: Thrift.TJSONProtocol, output?: Thrift.TJSONProtocol);

  OpenSession(req: TOpenSessionReq): TOpenSessionResp;

  OpenSession(req: TOpenSessionReq, callback?: (data: TOpenSessionResp)=>void): void;

  CloseSession(req: TCloseSessionReq): TCloseSessionResp;

  CloseSession(req: TCloseSessionReq, callback?: (data: TCloseSessionResp)=>void): void;

  GetInfo(req: TGetInfoReq): TGetInfoResp;

  GetInfo(req: TGetInfoReq, callback?: (data: TGetInfoResp)=>void): void;

  ExecuteStatement(req: TExecuteStatementReq): TExecuteStatementResp;

  ExecuteStatement(req: TExecuteStatementReq, callback?: (data: TExecuteStatementResp)=>void): void;

  GetTypeInfo(req: TGetTypeInfoReq): TGetTypeInfoResp;

  GetTypeInfo(req: TGetTypeInfoReq, callback?: (data: TGetTypeInfoResp)=>void): void;

  GetCatalogs(req: TGetCatalogsReq): TGetCatalogsResp;

  GetCatalogs(req: TGetCatalogsReq, callback?: (data: TGetCatalogsResp)=>void): void;

  GetSchemas(req: TGetSchemasReq): TGetSchemasResp;

  GetSchemas(req: TGetSchemasReq, callback?: (data: TGetSchemasResp)=>void): void;

  GetTables(req: TGetTablesReq): TGetTablesResp;

  GetTables(req: TGetTablesReq, callback?: (data: TGetTablesResp)=>void): void;

  GetTableTypes(req: TGetTableTypesReq): TGetTableTypesResp;

  GetTableTypes(req: TGetTableTypesReq, callback?: (data: TGetTableTypesResp)=>void): void;

  GetColumns(req: TGetColumnsReq): TGetColumnsResp;

  GetColumns(req: TGetColumnsReq, callback?: (data: TGetColumnsResp)=>void): void;

  GetFunctions(req: TGetFunctionsReq): TGetFunctionsResp;

  GetFunctions(req: TGetFunctionsReq, callback?: (data: TGetFunctionsResp)=>void): void;

  GetPrimaryKeys(req: TGetPrimaryKeysReq): TGetPrimaryKeysResp;

  GetPrimaryKeys(req: TGetPrimaryKeysReq, callback?: (data: TGetPrimaryKeysResp)=>void): void;

  GetCrossReference(req: TGetCrossReferenceReq): TGetCrossReferenceResp;

  GetCrossReference(req: TGetCrossReferenceReq, callback?: (data: TGetCrossReferenceResp)=>void): void;

  GetOperationStatus(req: TGetOperationStatusReq): TGetOperationStatusResp;

  GetOperationStatus(req: TGetOperationStatusReq, callback?: (data: TGetOperationStatusResp)=>void): void;

  CancelOperation(req: TCancelOperationReq): TCancelOperationResp;

  CancelOperation(req: TCancelOperationReq, callback?: (data: TCancelOperationResp)=>void): void;

  CloseOperation(req: TCloseOperationReq): TCloseOperationResp;

  CloseOperation(req: TCloseOperationReq, callback?: (data: TCloseOperationResp)=>void): void;

  GetResultSetMetadata(req: TGetResultSetMetadataReq): TGetResultSetMetadataResp;

  GetResultSetMetadata(req: TGetResultSetMetadataReq, callback?: (data: TGetResultSetMetadataResp)=>void): void;

  FetchResults(req: TFetchResultsReq): TFetchResultsResp;

  FetchResults(req: TFetchResultsReq, callback?: (data: TFetchResultsResp)=>void): void;

  GetDelegationToken(req: TGetDelegationTokenReq): TGetDelegationTokenResp;

  GetDelegationToken(req: TGetDelegationTokenReq, callback?: (data: TGetDelegationTokenResp)=>void): void;

  CancelDelegationToken(req: TCancelDelegationTokenReq): TCancelDelegationTokenResp;

  CancelDelegationToken(req: TCancelDelegationTokenReq, callback?: (data: TCancelDelegationTokenResp)=>void): void;

  RenewDelegationToken(req: TRenewDelegationTokenReq): TRenewDelegationTokenResp;

  RenewDelegationToken(req: TRenewDelegationTokenReq, callback?: (data: TRenewDelegationTokenResp)=>void): void;
}
